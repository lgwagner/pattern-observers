--[]((Q & !R & <>R) -> (!P U (S | R)))
--G((Q & !R & (F R)) -> (!P U (S | R)))
--Q = p, R = q, S = a, P = b
--G((p & !q & (F q)) -> (!b U (a | q)))
--LTLSPEC G((p & !q & (F q)) -> (!b U (a | q))) -> G holds
node between_p_and_q_a_precedes_b (p : bool; q : bool; a : bool ; b : bool) returns (holds : bool);
var
   state : subrange [-1,3] of int;
   pre_state : subrange [-1,3] of int;
   prop1 : bool;
let
   pre_state = 0 -> pre state;
   
   state =
      if(pre_state = 0)
      then
         if not p
         then 0
         else if (p and q)
         then 0
         else if (p and a)
         then 0
         else if (p and not q and not a and not b)
         then 1
         else if (p and not q and not a and b)
         then 2
         else -1
      else if(pre_state = 1)
      then
         if q
         then 0
         else if a 
         then 0
         else if (not q and not a and not b)
         then 1
         else if (not q and not a and b)
         then 2
         else -1
      else if(pre_state = 2)
      then 
         if q
         then 3
         else if (not q)
         then 2
         else -1
      else if (pre_state = 3)
      then 3
      else -1;
      
   holds = (state <> 3);
   prop1 = (state <> -1);
   --%PROPERTY prop1;
tel;
