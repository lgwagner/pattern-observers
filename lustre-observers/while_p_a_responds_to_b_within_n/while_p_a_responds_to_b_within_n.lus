node while_p_a_responds_to_b_within_n(p : bool; a : bool; b : bool; n : int) returns (holds : bool);
var
   state,pre_state : subrange [-1,3] of int;
   i,pre_i : int;
   latched_n : int;
   prop1 : bool;
let
   latched_n = n -> pre latched_n;

   pre_i = 0 -> pre i;
   
   i = 
	  if (pre_state = 1)
	  then
		if (p and not a and b)
		then 0
		else pre_i
	  else if (pre_state = 2)
	  then
		if (p and not a)
		then pre_i + 1
		else pre_i
	  else pre_i;
   
   pre_state = 0 -> pre state;
   
   state = 
      if (pre_state = 0)
      then
         if (not p)
         then 0
         else if (p and a)
         then 1
         else if (p and not a and not b)
         then 1
         else if (p and not a and b)
         then 2
         else -1
      else if (pre_state = 1)
      then
         if (not p)
         then 0
         else if (p and a)
         then 1
         else if (p and not a and not b)
         then 1
         else if (p and not a and b)
         then 2
         else -1
      else if (pre_state = 2)
      then
         if (not p)
         then 3
         else if (p and a)
         then 1
         else if (p and not a and (i < latched_n))
         then 2
		 else if (p and not a and (i >= latched_n))
		 then 3
         else -1
      else if (pre_state = 3)
      then 3
      else -1 ;
         
   holds = (state <> 3);
   prop1 = (state <> -1);
   --%PROPERTY prop1;
tel;
