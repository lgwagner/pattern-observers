--[](Q -> [](P))
--G(Q -> G(P))
--Q=p, P=a
--G(p -> G(a))
--LTLSPEC G(p -> G(a))
--LTLSPEC G(p -> G(a)) <-> G holds
node after_p_always_a(p : bool; a : bool) returns (holds : bool);
var
   state : subrange [-1,2] of int;
   pre_state : subrange [-1,2] of int;
   prop1 : bool;
let
   pre_state = 0 -> pre state;
   
   state = 
      if (pre_state = 0)
      then
         if (not p)
         then 0
         else if (p and a)
         then 1
         else if (p and not a)
         then 2
         else -1
      else if (pre_state = 1)
      then
         if a
         then 1
         else if not a
         then 2
         else -1
      else if (pre_state = 2)
      then 2
      else -1;
      
   holds = (state <> 2);
   prop1 = (state <> -1);
   --%PROPERTY prop1;
tel;
