--LTLSPEC G((p & !q) -> (!q W (a & !q))) <-> G holds
--LTLSPEC G((p & !q) -> (!q U ((a & !q) | G !q))) <-> G holds
node between_p_and_q_exists_a(p : bool; q : bool; a : bool) returns (holds : bool);
var
   state : subrange [-1,2] of int;
   pre_state : subrange [-1,2] of int;
   prop1 : bool;
let
   pre_state = 0 -> pre state;
   
   state = 
      if (pre_state = 0)
      then
         if (not p)
         then 0
         else if q
         then 0
         else if a
         then 0
         else if (p and not q and not a)
         then 1
         else -1
      else if (pre_state = 1)
      then
         if q
         then 2
         else if (not q and not a)
         then 1
         else if (not q and a)
         then 0
         else -1
      else if (pre_state = 2)
      then 2
      else -1;

   holds = (state <> 2);
   prop1 = (state <> -1);
   --%PROPERTY prop1;
tel;